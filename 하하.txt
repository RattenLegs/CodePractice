표준 입출력

컴퓨터가 값을 입력받고 출력하는 기본적인 방법.
입력: 키보드 입력이 기본 소스, 사용자가 콘솔에서 입력한 값이 프로그램으로 전달
출력: 콘솔(터미널) 화면을 통해 출력하는 것이 기본적인 방법, 프로그램 실행 결과를 화면에 표시

C언어의 #include<stdio.h> = 표준 입출력의 약어(STanDard Input, Output)
printf, scanf를 사용할 수 있게끔 도와줌

프로그래밍 언어 환경을 설치하면 자동으로 내장되어 있는 함수 사용
입력받는 함수, 출력하는 함수가 있다

-입력
C: scanf, gets, fgets
Java: Scanner
Python: input

-출력
C: printf, puts
JAVA: System.out.print(), System.out.println()
Python: print

python은 숫자로 입력받던 문자로 입력받던 무조건 문자형태, 숫자로 바꿔야 함

-----------------------------

변수 선언과 출력

C, Java, Python 공통: 조건문, 반복문, 출력

변수 = 변하는 수
임의(값이 바뀔수 있다는 뜻=임시)로 값을 저장할 때 쓰는 공간

----------------------------------

조건문
조건문과 반복문만 배우면 이론적으로 모든 프로그램을 만들 수 있다

1) 참과 거짓을 어떻게 판단하는지
2) 논리 연산자가 무엇인지

정처기에서 가장 중요한 영역 3가지
조건문, 반복문, 출력(하지 않으면 답안 작성 불가)

조건문: 특정 조건에 따라서 프로그램의 흐름을 바꾸는 문구(=분기문)

"조건"이라는 것은 참 or 거짓을 가질 수 있는데, 둘 중 어떤 결과가 나왔는지에 따라서 다른 흐름으로 코드를 실행한다.


1단계: 단순한 비교연산자를 활용한 조건문 이해하기
2단계: 비교연산자는 무엇을 반환하는 연산자일까?(+예제)
3단계: 조건문에 무자(일반 문자or 0 or NULL)가 오는 경우 어떻게 해석?

조건문은 참, 거짓을 판단해서 코드의 흐름을 결정한다.
C언어에서는 1을 참으로, 0을 거짓으로 판단한다.(그 외 숫자는 참)
C언어에서는 문자가 들어간 경우 참, 빈 문자나 |0(NULL문자)는 거짓

Java에서는 조건문에 직접 0, 1을 못 넣습니다(에러).
Java에서는 true, false라는 값이 있습니다.(ex: 1>2는 false 리턴)

Python에서는 True, False라는 값이 있습니다. 0은 거짓, 1은 참으로 평가됩니다.

----------------------------------------------

반복문

코드 문제 중 '쉽게 나왔는데 디테일을 놓쳐서 틀리는 경우'가 많이 있음
디테일을 챙길 줄 알아야 함
디테일 크게 3가지
1) '어떤 조건일 때 코드가 동작하는가(조건)
2) C, Java, Python의 고유한 문법
3) 특정 코드를 몇 번이나 반복하는가?(반복문)
반복문 핵심 키워드인 for, while(+do while, break)을 학습해보자

앞으로 알려드릴 키워드(특히 실행순서) 디테일하게 공부해야 함

C언어 기준> 확장

for: 초기식과 조건식을 잘 봐야 한다.

while: 조건식과 break를 잘 봐야 한다.

do..while: 처음에 무조건 한 번 실행되는 부분을 봐야한다.

 for 반복문의 대략적인 형태
for(초기식; 조건식; 증감식){
//반복 실행할 코드
}

초기식: 반복문이 처음 시작할 때 단 한 번 실행됩니다.
조건식: 이 식이 참(true)인 동안에 반복문을 실행합니다.(반복실행할 코드들어감)
조건식이 거짓(false)이 되면 반복문이 종료됩니다.
증감식: 반복문이 한 번 시행될 때마다 조건식을 검사하기 전에 실행됩니다.
(실행순서: 1. 초기식 / 2. 조건식 / 3. 코드 실행 / 4. 증감식 / 5. 조건식 ..)

for
1. 초기식 실행: 반복문이 시작될 때 한 번 실행
2. 조건식 검사: 반복문 블록이 실행되기 전에 조건식 검사(true: 실행, false: 종료)
3. 반복문 블록 실행: true, 반복문 블록 내의 코드 실행
4. 증감식 실행: 3 이후에 증감식 실행
5. 조건식 검사: 4 이후에 다시 조건식 검사, true: 재실행, false: 종료

함수(메서드)의 선언과 호출

